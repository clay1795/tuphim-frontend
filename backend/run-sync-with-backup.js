#!/usr/bin/env node

const kkphimSyncService = require('./services/kkphimSyncService');
const backupService = require('./services/backupService');
const syncScheduler = require('./services/syncScheduler');
const logger = require('./services/logger');

async function runSyncWithBackup() {
  try {
    console.log('üöÄ Starting sync with backup process...');
    console.log('‚è∞ Time:', new Date().toLocaleString());
    
    // B∆∞·ªõc 1: Ch·∫°y full sync
    console.log('\nüì° Step 1: Running full sync...');
    const syncStats = await kkphimSyncService.fullSync();
    console.log('‚úÖ Sync completed:', syncStats);
    
    // B∆∞·ªõc 2: T·∫°o backup
    console.log('\nüíæ Step 2: Creating backup...');
    const backupResults = await backupService.createFullBackup();
    console.log('‚úÖ Backup completed:', backupResults);
    
    // B∆∞·ªõc 3: Kh·ªüi ƒë·ªông scheduler
    console.log('\nüïê Step 3: Starting scheduler...');
    syncScheduler.start();
    console.log('‚úÖ Scheduler started - will sync and backup automatically');
    
    console.log('\nüéâ All processes completed successfully!');
    console.log('\nüìã Summary:');
    console.log(`   ‚Ä¢ Movies synced: ${syncStats.totalMovies || 0}`);
    console.log(`   ‚Ä¢ New movies: ${syncStats.newMovies || 0}`);
    console.log(`   ‚Ä¢ Updated movies: ${syncStats.updatedMovies || 0}`);
    console.log(`   ‚Ä¢ Backup created: ${backupResults.jsonBackup || 'N/A'}`);
    console.log(`   ‚Ä¢ Scheduler: Running (hourly sync + backup)`);
    
    console.log('\nüåê Dev Tunnels URLs:');
    console.log('   ‚Ä¢ Frontend: https://33ss6xpk-5173.asse.devtunnels.ms/');
    console.log('   ‚Ä¢ Backend: https://33ss6xpk-3001.asse.devtunnels.ms/');
    
    // Gi·ªØ process ch·∫°y ƒë·ªÉ scheduler ho·∫°t ƒë·ªông
    console.log('\n‚è≥ Scheduler is running... Press Ctrl+C to stop');
    
    process.on('SIGINT', () => {
      console.log('\nüõë Stopping scheduler...');
      syncScheduler.stop();
      process.exit(0);
    });
    
  } catch (error) {
    console.error('‚ùå Process failed:', error);
    process.exit(1);
  }
}

// Ch·∫°y n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  runSyncWithBackup();
}

module.exports = runSyncWithBackup;

