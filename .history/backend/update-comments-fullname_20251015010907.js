const mongoose = require('mongoose');
const Comment = require('./models/Comment');

// K·∫øt n·ªëi MongoDB
mongoose.connect('mongodb://localhost:27017/tuphim', {
  useNewUrlParser: true,
  useUnifiedTopology: true
}).then(() => {
  console.log('‚úÖ Connected to MongoDB');
  updateComments();
}).catch(err => {
  console.error('‚ùå MongoDB connection error:', err);
  process.exit(1);
});

async function updateComments() {
  try {
    // Mapping username -> fullName
    const usernameToFullName = {
      'testuser': 'Nguy·ªÖn VƒÉn Test',
      'Movie Fan': 'Fan Phim Hay',
      'Movie Lover': 'Ng∆∞·ªùi Y√™u Phim',
      'Fan Movie': 'Fan Phim ƒêi·ªán ·∫¢nh',
      'New User 1': 'Ng∆∞·ªùi D√πng M·ªõi 1',
      'Fresh Commenter': 'Ng∆∞·ªùi B√¨nh Lu·∫≠n M·ªõi'
    };

    console.log('üîÑ Updating comments with fullName...');

    // C·∫≠p nh·∫≠t t·∫•t c·∫£ comments
    for (const [username, fullName] of Object.entries(usernameToFullName)) {
      const result = await Comment.updateMany(
        { username: username, fullName: { $in: [null, '', undefined] } },
        { $set: { fullName: fullName } }
      );
      
      console.log(`‚úÖ Updated ${result.modifiedCount} comments for username: ${username} -> ${fullName}`);
    }

    console.log('‚úÖ All comments updated successfully!');
    
    // Hi·ªÉn th·ªã m·ªôt v√†i comments ƒë·ªÉ verify
    const sampleComments = await Comment.find().sort({ createdAt: -1 }).limit(5);
    console.log('\nüìù Sample comments:');
    sampleComments.forEach(comment => {
      console.log(`- ${comment.username} (${comment.fullName || 'NO FULLNAME'}): ${comment.content.substring(0, 50)}...`);
    });

    process.exit(0);
  } catch (error) {
    console.error('‚ùå Error updating comments:', error);
    process.exit(1);
  }
}

